/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { FC, forwardRef, useEffect, useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GroupProps } from "@react-three/fiber"

// TODO proper type
export const RocketModel: FC<GroupProps> = forwardRef<any, GroupProps>(
  function RocketModel(props, ref) {
    {
      //@ts-ignore
      const { nodes, materials } = useGLTF("/rocket.glb")
      return (
        <group ref={ref} {...props} dispose={null}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Window.geometry}
            material={nodes.Window.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Body.geometry}
            material={nodes.Body.material}
            material-emissive={"orange"}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Gray.geometry}
            material={nodes.Gray.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Red.geometry}
            material={nodes.Red.material}
          />
        </group>
      )
    }
  },
)

useGLTF.preload("/rocket.glb")
